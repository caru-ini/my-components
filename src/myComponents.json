{
  "statusCard": {
    "name": "statusCard",
    "code": "import { cn } from '@/lib/utils';\n\ntype Status = 'success' | 'warning' | 'error';\n\ntype StatusCardProps = {\n  icon: JSX.Element;\n  title: string;\n  status: Status;\n  description?: string;\n};\n\nexport const StatusCard: React.FC<StatusCardProps> = ({ icon, title, status, description }) => {\n  return (\n    <div className='flex items-center rounded-md border border-border p-2'>\n      <div className='size-full rounded-sm border border-border p-2'>{icon}</div>\n      <div className='ml-2 flex flex-col justify-center'>\n        <h2>{title}</h2>\n        <div className='flex items-center justify-between gap-x-1'>\n          <Indicator status={status} />\n          <p className='text-sm text-muted-foreground'>{description}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Indicator: React.FC<{ status: Status }> = ({ status }) => {\n  const innerStatusStyles = {\n    success: 'bg-green-600',\n    warning: 'bg-yellow-600',\n    error: 'bg-red-600',\n  };\n\n  const outerStatusStyles = {\n    success: 'bg-green-300',\n    warning: 'bg-yellow-300',\n    error: 'bg-red-300',\n  };\n  return (\n    <div>\n      <div\n        className={cn(\n          `flex size-3 rounded-full items-center justify-center`,\n          outerStatusStyles[status],\n        )}\n      >\n        <div className={cn(`size-2 rounded-full`, innerStatusStyles[status])} />\n      </div>\n    </div>\n  );\n};\n"
  },
  "toggletheme": {
    "name": "toggletheme",
    "code": "'use client';\n\nimport { Button } from '@/components/ui/button';\nimport { MoonIcon, SunIcon } from 'lucide-react';\nimport { useTheme } from 'next-themes';\nimport { useEffect, useState } from 'react';\n\ninterface ToggleThemeProps {\n  variant?:\n    | 'default'\n    | 'destructive'\n    | 'outline'\n    | 'secondary'\n    | 'ghost'\n    | 'link'\n    | null\n    | undefined;\n  className?: string;\n}\n\nconst ToggleTheme = ({ variant = 'default', className }: ToggleThemeProps) => {\n  const { theme, setTheme } = useTheme();\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => setMounted(true), []);\n\n  return (\n    <Button\n      variant={variant}\n      onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}\n      className={className}\n    >\n      {mounted && theme === 'dark' ? <SunIcon /> : <MoonIcon />}\n    </Button>\n  );\n};\n\nexport default ToggleTheme;\n"
  }
}